---
title: "Will I ever get a single??"
execute: 
  warning: false
  message: false
format:
  html: 
    code-fold: true
---

Last semester I was given one of the worst possible times, ending up in the last 15 mins of the nearly 4 hour process. My aspirations of getting a single dashed in an instant when I checked my time. Now as I look ahead for the following years I am still looking to occupy my own room. I understand there are now more options such as a suite or going off campus but in order to keep the simulation effective and repeatable with map I utilized the same concept for all three years. (Freshman year there was no room draw). I estimated that there were around 70 singles opportunities for the 400 students we have in each grade. I then simulated each and then calculated the percentage of students that get a a single at least once in their three years here.

```{r}
library(tidyverse)
library(ggplot2)


simulate_room_draw <- function(total_students = 400, students_per_draw = 5, draw_interval = 3) {

  students <- 1:total_students
  
 
  students_picked <- rep(FALSE, total_students)

  order_of_picking <- c()
  
  num_draws <- 0
  

  while (sum(students_picked) < total_students) {

    available_students <- which(!students_picked)
    selected_students <- sample(available_students, min(students_per_draw, length(available_students)), replace = FALSE)
    
    students_picked[selected_students] <- TRUE
    
  
    order_of_picking <- c(order_of_picking, selected_students)
    
    
    num_draws <- num_draws + 1
  }
  
 
  list(order_of_picking = order_of_picking, num_draws = num_draws)
}


set.seed(42)
simulations <- map(1:3, ~ simulate_room_draw())


  map2(simulations, 1:3, ~ {
    
    order_of_picking <- .x$order_of_picking
    draw_number <- 1:length(order_of_picking)
    
    
    colors <- ifelse(order_of_picking <= 70, "red", "blue")
    
   
    tibble(student = order_of_picking, draw_number = draw_number, color = colors) %>%
      ggplot(aes(x = draw_number, y = student, color = color)) +
      geom_point() +
      labs(title = paste("Room Selection Simulation", .y), x = "Draw Number (Time Interval)", y = "Student ID") +
      theme_minimal() +
      scale_color_identity() + 
      theme(legend.position = "none")
  })

```

```{r}



simulate_room_draw <- function(total_students = 400, students_per_draw = 5, draw_interval = 3) {

  students <- 1:total_students
  

  students_picked <- rep(FALSE, total_students)
  
 
  order_of_picking <- c()
  
  num_draws <- 0

  while (sum(students_picked) < total_students) {
 
    available_students <- which(!students_picked)
    selected_students <- sample(available_students, min(students_per_draw, length(available_students)), replace = FALSE)

    students_picked[selected_students] <- TRUE
    
    
    order_of_picking <- c(order_of_picking, selected_students)
    
  
    num_draws <- num_draws + 1
  }
  
  
  list(order_of_picking = order_of_picking, num_draws = num_draws)
}


set.seed(42)
simulations <- map(1:3, ~ simulate_room_draw())


red_dot_students <- map(simulations, ~ .x$order_of_picking[1:70])


all_red_dots <- unique(unlist(red_dot_students))


total_students <- 400
prob_red_dot_at_least_once <- length(all_red_dots) / total_students
prob_red_dot_at_least_once

```

```{r}

simulate_room_draw <- function(total_students = 400, students_per_draw = 5, draw_interval = 3) {

  students <- 1:total_students
  

  students_picked <- rep(FALSE, total_students)
  

  order_of_picking <- c()
  
  num_draws <- 0
  

  while (sum(students_picked) < total_students) {

    available_students <- which(!students_picked)
    selected_students <- sample(available_students, min(students_per_draw, length(available_students)), replace = FALSE)
    
  
    students_picked[selected_students] <- TRUE
    
 
    order_of_picking <- c(order_of_picking, selected_students)
    
   
    num_draws <- num_draws + 1
  }
  
  
  list(order_of_picking = order_of_picking, num_draws = num_draws)
}


set.seed(42)
simulations <- map(1:3, ~ simulate_room_draw())


student_red_dot_count <- rep(0, 400)


#utilized walk instead of map here bc I found that it would eliminate the result and would set up the graph without teh additional numbers. 
walk(simulations, ~ {
  red_dot_students <- .x$order_of_picking[1:70]
  student_red_dot_count[red_dot_students] <<- student_red_dot_count[red_dot_students] + 1
})


df <- tibble(red_dot_count = student_red_dot_count)



ggplot(df, aes(x = red_dot_count)) +
  geom_histogram(binwidth = 1, fill = "blue", alpha = 0.7) +
  labs(title = "Distribution of How Many Times Students Got a Single",
       x = "Times selected for Single",
       y = "Number of Students") +
  scale_x_continuous(breaks = 0:3) +  
  theme_minimal()

```

Created the simulation and ran it 3 times which can be seen in the first three scatter plots although those are not very helpful as it impossible to identify which student ID is which. So then I calculated the overall percentage of someone receiving at least one single throughout the 3 years and it came out to 43%. Then in order to create a more effective visual representation I created a histogram that shows how many times each student got a single. This showed there is even a chance for a student to get a time early enough for a single all 3 room draws. It also showed that there is a large portion of the student body that will never get a good room draw and honestly I think they should change the process a little so that if you have a terrible time the first room draw you should be guaranteed in the first half, much like the lottery for picking classes. With this new information that I have a 43%\* chance of getting a single at least once in my three years of room draws I suspect I will be a part of the 57%. It will also all come down to whether study abroad messes up my chances or improves my chances... We shall see.
