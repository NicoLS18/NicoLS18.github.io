---
title: "Final6"
format: html
---

```{r}
set.seed(42)  # for reproducibility

# Create a data frame with your schedule
schedule <- data.frame(
  team = c("CMS", "La Verne", "ETBU", "Occidental", "Cal Lu", "Cal Tech", "Whittier",
           "Lewis and Clark", "Pacific Lutheran", "Chapman", "Redlands", "Williamette",
           "MIT", "UW La Crosse", "Tufts"),
  win_prob = c(0.56, 0.55, 0.53, 0.85, 0.60, 0.95, 0.84,
               0.71, 0.73, 0.60, 0.74, 0.60,
               0.80, 0.54, 0.65),
  games = c(3, 3, 3, 3, 3, 3, 4,
            3, 2, 3, 3, 1,
            2, 1, 3)
)

# Simulate the season
simulate_season <- function(schedule) {
  results <- schedule |>
    dplyr::rowwise() |>
    dplyr::mutate(
      wins = sum(runif(games) < win_prob),
      losses = games - wins
    ) |>
    dplyr::ungroup()
  
  # Season totals
  total_wins <- sum(results$wins)
  total_losses <- sum(results$losses)
  
  list(results = results, total_wins = total_wins, total_losses = total_losses)
}

# Run the simulation
library(dplyr)
season <- simulate_season(schedule)

# View detailed results
print(season$results)

# Print summary
cat("\nSeason Summary:\n")
cat("Total Wins:", season$total_wins, "\n")
cat("Total Losses:", season$total_losses, "\n")

```

```{r}
library(dplyr)
library(purrr)

set.seed(42)  # for reproducibility

# Your original schedule
schedule <- data.frame(
  team = c("CMS", "La Verne", "ETBU", "Occidental", "Cal Lu", "Cal Tech", "Whittier",
           "Lewis and Clark", "Pacific Lutheran", "Chapman", "Redlands", "Williamette",
           "MIT", "UW La Crosse", "Tufts"),
  win_prob = c(0.56, 0.55, 0.53, 0.85, 0.60, 0.95, 0.84,
               0.71, 0.73, 0.60, 0.74, 0.60,
               0.80, 0.54, 0.65),
  games = c(3, 3, 3, 3, 3, 3, 4,
            3, 2, 3, 3, 1,
            2, 1, 3)
)

# Your simulation function
simulate_season <- function(schedule) {
  results <- schedule |>
    rowwise() |>
    mutate(
      wins = sum(runif(games) < win_prob),
      losses = games - wins
    ) |>
    ungroup()
  
  total_wins <- sum(results$wins)
  total_losses <- sum(results$losses)
  
  tibble(total_wins = total_wins, total_losses = total_losses)
}

# Run the simulation 1000 times
n_simulations <- 1000
sim_results <- map_dfr(1:n_simulations, ~simulate_season(schedule))

# Summary
summary_stats <- sim_results |>
  summarise(
    avg_wins = mean(total_wins),
    sd_wins = sd(total_wins),
    max_wins = max(total_wins),
    min_wins = min(total_wins)
  )

# Print results
print(summary_stats)

```

```{r}
library(dplyr)
library(purrr)
library(ggplot2)

set.seed(42)  # for reproducibility

# Schedule data
schedule <- data.frame(
  team = c("CMS", "La Verne", "ETBU", "Occidental", "Cal Lu", "Cal Tech", "Whittier",
           "Lewis and Clark", "Pacific Lutheran", "Chapman", "Redlands", "Williamette",
           "MIT", "UW La Crosse", "Tufts"),
  win_prob = c(0.56, 0.55, 0.53, 0.85, 0.60, 0.95, 0.84,
               0.71, 0.73, 0.60, 0.74, 0.60,
               0.80, 0.54, 0.65),
  games = c(3, 3, 3, 3, 3, 3, 4,
            3, 2, 3, 3, 1,
            2, 1, 3)
)

# Simulation function
simulate_season <- function(schedule) {
  results <- schedule |>
    rowwise() |>
    mutate(
      wins = sum(runif(games) < win_prob),
      losses = games - wins
    ) |>
    ungroup()
  
  total_wins <- sum(results$wins)
  tibble(total_wins = total_wins)
}

# Run 100 simulations
n_simulations <- 1000
sim_results <- map_dfr(1:n_simulations, ~simulate_season(schedule))

# Create a bar plot of total wins
ggplot(sim_results, aes(x = total_wins)) +
  geom_bar(fill = "steelblue", color = "black") +
  labs(
    title = "Distribution of Total Wins Over 1000 Simulated Seasons",
    x = "Total Wins",
    y = "Frequency"
  ) +
  theme_minimal()

```



