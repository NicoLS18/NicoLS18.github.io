---
title: "Obama"
execute: 
  warning: false
  message: false
---

```{r, echo=FALSE}
library(tidyverse)
library(ggplot2)
library(stringr)


```

```{r}
obama <- readr::read_csv('tweets.csv')




```

```{r, echo=FALSE}
cleanobama <- obama |>
  mutate(text = str_to_lower(text),
         text = str_replace_all(text, "http[[:alnum:][:punct:]]*", ""),  # Remove URLs
         text = str_replace_all(text, "[[:punct:]]", " "),
         text = str_replace_all(text, "—@POTUS.*", ""),
         text= str_replace_all(text, "\n", "")) 

# Define stopwords to exclude
stopwords <- c("the", "and", "to", "of", "in", "a", "on", "for", "with", "is", "that","s", "at", "potus", "  ", "rt", "amp", "it","this", "are","→")

# Tokenize the text, remove stopwords, and count word frequencies
word_counts <- cleanobama |>
  mutate(words = str_split(text, "\\s+")) |>  # Split text into words
  unnest(words) |>  # Convert list of words into individual rows
  filter(words != "", !words %in% stopwords) |>  # Exclude stopwords
  count(words, sort = TRUE)  # Count word frequencies


word_counts |>
  slice_max(n, n = 10) |>  # Get top 10 most frequent words
  ggplot(aes(x = reorder(words, n), y = n)) +
  geom_col(fill = "skyblue") +
  coord_flip() +
  labs(title = "Top 10 Words in Obama's Tweets",
       x = "Word",
       y = "Frequency")

```

```{r, echo=FALSE}



# Define policy-related keywords (only match these literal words)
policy_keywords <- c("healthcare", "education", "climate", "economy", 
                     "jobs", "tax", "immigration", "gun", "poverty")

# Pre-process tweets (lowercase and remove punctuation)
obama <- obama |>
  mutate(text = str_to_lower(text),  # Lowercase
         text = str_replace_all(text, "[[:punct:]]", " "))  # Remove punctuation

# Function to create regex with strict whole-word lookarounds
add_word_boundaries <- function(word) {
  paste0("(?<!\\w)", word, "(?!\\w)")  # Matches whole word only
}

# Create named list of regexes for each policy word
policy_regexes <- setNames(map(policy_keywords, add_word_boundaries), policy_keywords)

# Count how many unique tweets mention each policy keyword (exact word only)
policy_counts <- map_dfr(names(policy_regexes), ~{
  keyword_regex <- policy_regexes[[.x]]

  # Detect if each tweet mentions this exact word
  obama |>
    mutate(has_word = str_detect(text, regex(keyword_regex))) |>
    summarize(policy = .x,
              count = sum(has_word))  # This counts tweets where the word appears at least once
}) |>
  arrange(desc(count))

# Print result table (instead of graph)
print(policy_counts)


```

The number of times each of the following words is found exactly like this in unique tweets. Eliminates taxpayers and other additions to the words.

```{}
```
